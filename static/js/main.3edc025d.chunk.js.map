{"version":3,"sources":["helpers.js","NavbarComponents/LOGO.png","NavbarComponents/NavbarDropdown.jsx","redux/films/actions.js","NavbarComponents/search/index.jsx","NavbarComponents/ContentNav.jsx","PublicLayout/PublicLayout.jsx","Content/Sections/Cards/Card.jsx","Content/Sections/ContentBodyCard.jsx","redux/genres/actions.js","Content/Content.jsx","NavbarComponents/Films.jsx","Content/Sections/Cards/RatingCard.jsx","NavbarComponents/FilmsDetay.jsx","Content/Sections/Cards/PeopleCard.jsx","redux/people/actions.js","NavbarComponents/People.jsx","NavbarComponents/PeopleDetay.jsx","App.js","reportWebVitals.js","redux/films/reducers.js","redux/people/reducers.js","redux/genres/reducers.js","redux/services.js","redux/films/saga.js","redux/people/saga.js","redux/genres/saga.js","redux/sagas.js","redux/reducers.js","history.js","index.js"],"names":["global","localStorage","removeItem","store","getSearchParams","params","Object","keys","map","key","encodeURIComponent","join","Component","GET_FILMS_REQUEST","GET_FILMS_SUCCESS","GET_FILMS_FAILURE","RATE_FILM_REQUEST","RATE_FILM_SUCCESS","RATE_FILM_FAILURE","SEARCH_FILM_REQUEST","SEARCH_FILM_SUCCESS","SEARCH_FILM_FAILURE","getFilmsRequest","payload","type","App","searchSpace","event","keyword","target","value","setState","search","state","this","props","window","scrollTo","items","films","data","filter","item","original_title","toLowerCase","includes","className","placeholder","onChange","e","class","length","to","id","title","vote_average","release_date","src","poster_path","alt","connect","dispatch","ContentNav","logo","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","PublicLayout","children","Card","img","imdb","date","FromLibrary","mixedFilms","slice","name","film","GET_GENRES_REQUEST","GET_GENRES_SUCCESS","GET_GENRES_FAILURE","Content","getGenres","genres","genre","Films","RatingCard","rate1","handleClick","movie_id","filmId","ratefilm","initialRating","onClick","React","rateFilmRequest","withRouter","FilmsDetay","match","selectedFilm","find","parseInt","backdrop_path","vote_count","popularity","toFixed","overview","PeopleCard","department","GET_PEOPLE_REQUEST","GET_PEOPLE_SUCCESS","GET_PEOPLE_FAILURE","getPeopleRequest","People","people","profile_path","known_for_department","PeopleDetay","selectedPeople","known_for","peopledetay","PublicRoute","rest","render","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","error","rateData","API_URL","contentTypes","Post","endpoint","body","isUrlEncoded","apiUrl","requestOptions","method","headers","Accept","JSON","stringify","response","fetch","fetchResponse","json","catch","Get","getFilmsSaga","searchFilmSaga","rateFilmSaga","Saga","call","put","results","takeLatest","getPeopleSaga","getGenresSaga","rootSaga","all","history","createBrowserHistory","sagaMiddleware","createSagaMiddleware","routeMiddleware","routerMiddleware","middlewares","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","router","connectRouter","applyMiddleware","run","sagas","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3edc025d.chunk.js","sourcesContent":["import { fromPairs } from \"lodash/fp\";\n\nconst localStorage =\n  global.localStorage && global.localStorage.removeItem\n    ? global.localStorage\n    : (function () {\n        let store = {};\n        return {\n          getItem(key) {\n            return store[key] || null;\n          },\n          setItem(key, value) {\n            store[key] = value.toString();\n          },\n          clear() {\n            store = {};\n          },\n          removeItem(key) {\n            store = Object.keys(store)\n              .filter((k) => key !== k)\n              .reduce((accumulator, currentItem) => {\n                accumulator[currentItem] = store[currentItem];\n                return accumulator;\n              }, {});\n          },\n        };\n      })();\n\nexport const readLocalStorage = (key) => {\n  if (Array.isArray(key)) {\n    return fromPairs(\n      key.map((k) => [\n        k,\n        localStorage.getItem(k) && JSON.parse(localStorage.getItem(k)),\n      ])\n    );\n  }\n  return localStorage.getItem(key) && JSON.parse(localStorage.getItem(key));\n};\n\nexport const writeLocalStorage = (key, value) => {\n  const keys = typeof key === \"object\" ? key : { [key]: value };\n  Object.entries(keys).map(([k, val]) =>\n    localStorage.setItem(k, JSON.stringify(val))\n  );\n  return keys;\n};\n\nexport const removeLocalStorage = (key) => {\n  const keys = Array.isArray(key) ? key : [key];\n  keys.forEach((k) => localStorage.removeItem(k));\n  return keys;\n};\n\nexport const clearLocalStorage = () => {\n  localStorage.clear();\n};\n\nexport const getSearchParams = (params) =>\n  Object.keys(params)\n    .map((key) => {\n      if (typeof params[key] !== \"undefined\") {\n        return `${encodeURIComponent(key)}=${\n          encodeURIComponent(params[key]) ? encodeURIComponent(params[key]) : \"\"\n        }`;\n      }\n      return {};\n    })\n    .join(\"&\");\n\nexport const generateString = () => {\n  const name =\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15);\n  return name;\n};\n\nexport const isLogged = () => {\n  const token = readLocalStorage(\"token\");\n  const user = readLocalStorage(\"user\");\n  return token && user;\n};\n\nexport const getParameterByName = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return \"\";\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n};\n\nexport const htmlToText = (html) => {\n  var temp = document.createElement(\"div\");\n  temp.innerHTML = html;\n  return temp.textContent || temp.innerText || \"\";\n};","export default __webpack_public_path__ + \"static/media/LOGO.6428c7c5.png\";","import React, { Component } from \"react\";\nimport \"./NavbarDropdown.css\";\nclass NavbarDropdown extends Component {\n  render() {\n    return (\n      <div class=\"dropdown\">\n        <button class=\"dropbtn\">\n          <i>\n            <svg\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <circle cx=\"7\" cy=\"12\" r=\"2\" fill=\"#7C8DB5\" />\n              <circle cx=\"17.1429\" cy=\"12\" r=\"2\" fill=\"#7C8DB5\" />\n            </svg>\n          </i>\n        </button>\n        <div class=\"dropdown-content\">\n          <a href=\"#\">Link 1</a>\n          <a href=\"#\">Link 2</a>\n          <a href=\"#\">Link 3</a>\n        </div>\n      </div>\n    );\n  }\n}\nexport default NavbarDropdown;\n","export const GET_FILMS_REQUEST = \"GET_FILMS_REQUEST\";\nexport const GET_FILMS_SUCCESS = \"GET_FILMS_SUCCESS\";\nexport const GET_FILMS_FAILURE = \"GET_FILMS_FAILURE\";\n\nexport const RATE_FILM_REQUEST = \"RATE_FILM_REQUEST\";\nexport const RATE_FILM_SUCCESS = \"RATE_FILM_SUCCESS\";\nexport const RATE_FILM_FAILURE = \"RATE_FILM_FAILURE\";\n\nexport const SEARCH_FILM_REQUEST = \"SEARCH_FILM_REQUEST\";\nexport const SEARCH_FILM_SUCCESS = \"SEARCH_FILM_SUCCESS\";\nexport const SEARCH_FILM_FAILURE = \"SEARCH_FILM_FAILURE\";\n\nexport const getFilmsRequest = (payload) => ({\n  type: GET_FILMS_REQUEST,\n  payload,\n});\n\nexport const searchFilmRequest = (payload) => ({\n  type: SEARCH_FILM_REQUEST,\n  payload,\n});\n\nexport const rateFilmRequest = (payload) => ({\n  type: RATE_FILM_REQUEST,\n  payload,\n});\n\n// magic keyword,string\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFilmsRequest } from \"../../redux/films/actions\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      search: null,\n    };\n  }\n\n  componentDidMount() {\n    const { getFilmsRequest } = this.props;\n    window.scrollTo(0, 0);\n    getFilmsRequest();\n  }\n\n  searchSpace = (event) => {\n    let keyword = event.target.value;\n    this.setState({ search: keyword });\n  };\n\n  render() {\n    const { films } = this.props;\n    const items = films.data?.filter((item) => {\n      if (this.state.search == null) return item;\n      else if (\n        item.original_title\n          .toLowerCase()\n          .includes(this.state.search.toLowerCase())\n      ) {\n        return item;\n      }\n    });\n\n    return (\n      <div className=\"dropdown\">\n        <button className=\"dropbtn\">\n          <input\n            type=\"text\"\n            placeholder=\"Film Adı Girin\"\n            onChange={(e) => this.searchSpace(e)}\n          />\n        </button>\n        <div class=\"dropdown-content\">\n          {items &&\n            items.length > 0 &&\n            items.map((data) => {\n              return (\n                <Link to={`/film-project/films/${data.id}`}>\n                  <ul>\n                    <div>\n                      <h4>{data.title}</h4>\n                      <p>IMDB: {data.vote_average}</p>\n                      <p>Yayın Tarihi: {data.release_date}</p>\n                    </div>\n                    <img\n                      src={\"https://image.tmdb.org/t/p/w500\" + data.poster_path}\n                      alt=\"png\"\n                    />\n                  </ul>\n                </Link>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  getFilmsRequest: () => dispatch(getFilmsRequest()),\n});\nconst mapStateToProps = (state) => ({\n  films: state.films,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavbarDropdown from \"./NavbarDropdown\";\nimport \"./ContentNav.css\";\nimport logo from \"./LOGO.png\";\nimport Search from \"./search\";\n\nclass ContentNav extends Component {\n  render() {\n    return (\n      <div className=\"content-nav\">\n        <div className=\"content-nav-left\">\n          <Link to=\"/film-project\">\n            {\" \"}\n            <img className=\"content-nav-logo\" src={logo} alt=\"\" />\n          </Link>\n\n          <button>\n            <Link to=\"/film-project\">Ana Sayfa</Link>\n          </button>\n          <button>\n            <Link to=\"/film-project/films\">Filmler</Link>\n          </button>\n          <button>\n            <Link to=\"/film-project/people\">Oyuncular</Link>\n          </button>\n        </div>\n        <div className=\"content-nav-right\">\n          <Search className=\"search-input\" />\n        </div>\n        <div className=\"dropdownx\">\n          <span>\n            <svg\n              aria-hidden=\"true\"\n              focusable=\"false\"\n              data-prefix=\"fas\"\n              data-icon=\"bars\"\n              class=\"svg-inline--fa fa-bars fa-w-14\"\n              role=\"img\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 448 512\"\n            >\n              <path\n                fill=\"currentColor\"\n                d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n              ></path>\n            </svg>\n          </span>\n          <div className=\"dropdown-contentx\">\n            <p>\n              <Link className=\"p\" to=\"/film-project\">\n                Ana Sayfa\n              </Link>\n            </p>\n            <p>\n              <Link className=\"p\" to=\"/film-project/films\">\n                Filmler\n              </Link>\n            </p>\n            <p>\n              <Link className=\"p\" to=\"/film-project/people\">\n                Oyuncular\n              </Link>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContentNav;\n","import React from \"react\";\nimport ContentNav from \"../NavbarComponents/ContentNav\";\nimport \"./PublicLayout.css\";\n\nconst PublicLayout = ({ children }) => {\n  return (\n    <div className=\"public-layout\">\n      <div className=\"content\">{children}</div>\n      <div className=\"sidebar\">\n        <ContentNav />\n      </div>\n    </div>\n  );\n};\n\nexport default PublicLayout;\n","import React, { Component } from \"react\";\nimport \"./Card.css\";\n\nclass Card extends Component {\n  render() {\n    return (\n      <div className=\"card\">\n        <img\n          className=\"card-img\"\n          src={\"https://image.tmdb.org/t/p/w500\" + this.props.img}\n          alt=\"png\"\n        />\n        <div className=\"card-body\">\n          <h4>{this.props.title}</h4>\n\n          <p>\n            IMDB : <span>{this.props.imdb}</span>{\" \"}\n          </p>\n\n          <p>\n            Yayın Tarihi : <span>{this.props.date}</span>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Card;\n","import React, { Component } from \"react\";\nimport \"./ContentBodyCard.css\";\nimport Card from \"./Cards/Card\";\nimport { Link } from \"react-router-dom\";\nimport { getFilmsRequest } from \"../../redux/films/actions\";\nimport { connect } from \"react-redux\";\n\nclass FromLibrary extends Component {\n  componentDidMount() {\n    const { getFilmsRequest } = this.props;\n\n    getFilmsRequest();\n  }\n\n  render() {\n    const { films } = this.props;\n    const mixedFilms = films?.data?.slice(7, 13);\n\n    return (\n      <div className=\"fromlibrary\">\n        <div className=\"fromlibrary-head\">\n          <Link to={`film-project/films`}>\n            <h4>{this.props.name}</h4>\n          </Link>\n        </div>\n        <hr />\n        <div className=\"fromlibrary-body\">\n          {mixedFilms &&\n            mixedFilms.length > 0 &&\n            mixedFilms.map((film) => {\n              return (\n                mixedFilms && (\n                  <Link to={`film-project/films/${film.id}`}>\n                    <Card\n                      img={film.poster_path}\n                      title={film.title}\n                      imdb={film.vote_average}\n                      date={film.release_date}\n                    />\n                  </Link>\n                )\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getFilmsRequest: () => dispatch(getFilmsRequest()),\n});\n\nconst mapStateToProps = (state) => ({\n  films: state.films,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FromLibrary);\n","export const GET_GENRES_REQUEST = 'GET_GENRES_REQUEST'\nexport const GET_GENRES_SUCCESS = 'GET_GENRES_SUCCESS'\nexport const GET_GENRES_FAILURE = 'GET_GENRES_FAILURE'\n\n\nexport const getGenresRequest = payload => ({\n    type: GET_GENRES_REQUEST,\n    payload,\n  });\n\n// magic keyword,string","import React, { Component } from \"react\";\nimport \"./Content.css\";\nimport ContentBodyCard from \"./Sections/ContentBodyCard\";\nimport { getGenresRequest } from \"../redux/genres/actions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass Content extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    this.props.getGenres();\n  }\n\n  render() {\n    const { genres } = this.props;\n    return (\n      genres && (\n        <div className=\"content\">\n          <div className=\"content-body\">\n            {genres.data &&\n              genres.data.length > 0 &&\n              genres.data.map((genre) => {\n                return genres && <ContentBodyCard name={genre.name} />;\n              })}\n          </div>\n        </div>\n      )\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  getGenres: () => dispatch(getGenresRequest()),\n});\nconst mapStateToProps = (state) => ({\n  genres: state.genres,\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\n","import React, { Component } from \"react\";\nimport \"./Films.css\";\nimport Card from \"../Content/Sections/Cards/Card\";\nimport { Link } from \"react-router-dom\";\nimport { getFilmsRequest } from \"../redux/films/actions\";\nimport { connect } from \"react-redux\";\n\nclass Films extends Component {\n  componentDidMount() {\n    const { getFilmsRequest } = this.props;\n    window.scrollTo(0, 0);\n    getFilmsRequest();\n  }\n  render() {\n    const { films } = this.props;\n    return (\n      <div>\n        <br />\n        <br />\n        <div className=\"films\">\n          {films.data &&\n            films.data.length > 0 &&\n            films.data.map((film) => {\n              return (\n                <Link to={`/film-project/films/${film.id}`}>\n                  <Card\n                    title={film.title}\n                    imdb={film.vote_average}\n                    img={film.poster_path}\n                    date={film.release_date}\n                  />\n                </Link>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  getFilmsRequest: () => dispatch(getFilmsRequest()),\n});\n\nconst mapStateToProps = (state) => ({\n  films: state.films,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Films);\n","import React, { useState } from \"react\";\nimport Rating from \"react-rating\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { rateFilmRequest } from \"../../../redux/films/actions\";\n \nclass RatingCard extends React.Component {\n\n  state = {\n    rate1:3\n  }\n \n   handleClick = (e) => {\n    const payload = {movie_id:this.props.filmId,value:5}\n    this.props.ratefilm(payload)\n    this.setState({rate1:e})\n  }\n\n  render(){\n    return (\n      <div >\n        <Rating\n          initialRating={this.state.rate1}\n          onClick={this.handleClick}\n        />\n        <p>Rate:  {this.state.rate1}</p>\n      </div>\n    );\n  }\n\n \n}\n \nconst mapDispatchToProps = (dispatch) => ({\n  ratefilm: (payload) => dispatch(rateFilmRequest(payload)),\n});\n\n/* const mapStateToProps = (state) => ({\n  films: state.films,\n}); */\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withRouter(RatingCard));","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./FilmsDetay.css\";\nimport { getFilmsRequest } from \"../redux/films/actions\";\nimport { connect } from \"react-redux\";\nimport RatingCard from \"../Content/Sections/Cards/RatingCard\";\n\nclass FilmsDetay extends Component {\n  componentDidMount() {\n    const { getFilmsRequest } = this.props;\n\n    getFilmsRequest();\n  }\n  render() {\n    const { films } = this.props;\n    const id = this.props.match.params.id;\n    const selectedFilm =\n      films.data &&\n      films.data.length > 0 &&\n      films.data.find((item) => item.id === parseInt(id));\n    return (\n      selectedFilm && (\n        <div className=\"filmsdetay\">\n          <div className=\"backdrop-path\">\n            <img\n              src={\n                \"https://image.tmdb.org/t/p/w500\" + selectedFilm.backdrop_path\n              }\n              alt=\"backdroppath\"\n            />\n            <img\n              src={\n                \"https://image.tmdb.org/t/p/w500\" + selectedFilm.backdrop_path\n              }\n              alt=\"backdroppath\"\n            />\n            <img\n              src={\n                \"https://image.tmdb.org/t/p/w500\" + selectedFilm.backdrop_path\n              }\n              alt=\"backdroppath\"\n            />\n            <img\n              src={\n                \"https://image.tmdb.org/t/p/w500\" + selectedFilm.backdrop_path\n              }\n              alt=\"backdroppath\"\n            />\n            <img\n              src={\n                \"https://image.tmdb.org/t/p/w500\" + selectedFilm.backdrop_path\n              }\n              alt=\"backdroppath\"\n            />\n            <img\n              src={\n                \"https://image.tmdb.org/t/p/w500\" + selectedFilm.backdrop_path\n              }\n              alt=\"backdroppath\"\n            />\n          </div>\n\n          <div className=\"filmsdetay-left\">\n            <img\n              className=\"poster-path\"\n              src={\"https://image.tmdb.org/t/p/w500\" + selectedFilm.poster_path}\n              alt=\"poster-path\"\n            />\n          </div>\n          <div className=\"filmsdetay-right\">\n            <h4>{selectedFilm.title}</h4>\n            <RatingCard filmId={selectedFilm.id} />\n            <hr />\n\n            <p>\n              <strong> IMDB: </strong>\n              <span>{selectedFilm.vote_average} </span>\n            </p>\n            <p>\n              <strong>Yapım Tarihi:</strong>{\" \"}\n              <span>{selectedFilm.release_date} </span>\n            </p>\n\n            <p>\n              <strong> Oylanma: </strong>\n              <span>{selectedFilm.vote_count} </span>\n            </p>\n            <p>\n              <strong>Popülarite: </strong>\n              <span>{selectedFilm.popularity.toFixed(0)} </span>\n            </p>\n\n            <hr />\n            <p>\n              <strong>Film Özeti</strong>\n            </p>\n            <p>{selectedFilm.overview}</p>\n          </div>\n        </div>\n      )\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  getFilmsRequest: () => dispatch(getFilmsRequest()),\n});\n\nconst mapStateToProps = (state) => ({\n  films: state.films,\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(FilmsDetay));\n","import React, { Component } from \"react\";\nimport \"./PeopleCard.css\";\n\nclass PeopleCard extends Component {\n  render() {\n    return (\n      <div className=\"people-card\">\n        <img\n          className=\"people-card-img\"\n          src={\"https://image.tmdb.org/t/p/w500\" + this.props.img}\n          alt=\"png\"\n        />\n        <div className=\"people-card-body\">\n          <h4>{this.props.title}</h4>\n          <p>\n            Popularity: <span>{this.props.popularity}</span>\n          </p>\n\n          <p>\n            Departman: <span>{this.props.department}</span>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\nexport default PeopleCard;\n","export const GET_PEOPLE_REQUEST = 'GET_PEOPLE_REQUEST'\nexport const GET_PEOPLE_SUCCESS = 'GET_PEOPLE_SUCCESS'\nexport const GET_PEOPLE_FAILURE = 'GET_PEOPLE_FAILURE'\n\n\nexport const getPeopleRequest = payload => ({\n    type: GET_PEOPLE_REQUEST,\n    payload,\n  });\n\n// magic keyword,string","import React, { Component } from \"react\";\nimport \"./Films.css\";\nimport PeopleCard from \"../Content/Sections/Cards/PeopleCard\";\nimport { getPeopleRequest } from \"../redux/people/actions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass People extends Component {\n  componentDidMount() {\n    const { getPeopleRequest } = this.props;\n    window.scrollTo(0, 0);\n    getPeopleRequest();\n  }\n  render() {\n    const { people } = this.props;\n    return (\n      <div className=\"films\">\n        {people.data &&\n          people.data.length > 0 &&\n          people.data.map((people) => {\n            return (\n              <Link to={`/film-project/people/${people.id}`}>\n                <PeopleCard\n                  img={people.profile_path}\n                  title={people.name}\n                  popularity={people.popularity}\n                  department={people.known_for_department}\n                />\n              </Link>\n            );\n          })}\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  getPeopleRequest: () => dispatch(getPeopleRequest()),\n});\n\nconst mapStateToProps = (state) => ({\n  people: state.people,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(People);\n","import React, { Component } from \"react\";\nimport { getPeopleRequest } from \"../redux/people/actions\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./PeopleDetay.css\";\n\nclass PeopleDetay extends Component {\n  componentDidMount() {\n    const { getPeopleRequest } = this.props;\n\n    getPeopleRequest();\n  }\n  render() {\n    const { people } = this.props;\n    const id = this.props.match.params.id;\n    const selectedPeople =\n      people.data &&\n      people.data.length > 0 &&\n      people.data.find((item) => item.id === parseInt(id));\n    return (\n      selectedPeople && (\n        <div className=\"peopledetay\">\n          <img\n            className=\"peopledetay-poster-path\"\n            src={\n              \"https://image.tmdb.org/t/p/w500\" + selectedPeople.profile_path\n            }\n            alt=\"image\"\n          />\n          <div className=\"peopledetay-right\">\n            <h1>{selectedPeople.name}</h1>\n            <hr />\n            <br />\n            <h3>Popüler Filmler</h3>\n            <br />\n            {selectedPeople?.known_for.map((peopledetay) => {\n              return (\n                <div className=\"peopledetay-right-bottom\">\n                  <br />\n                  <img\n                    src={\n                      \"https://image.tmdb.org/t/p/w500\" +\n                      peopledetay.poster_path\n                    }\n                    alt=\"img\"\n                  />\n                  <div>\n                    <h4>{peopledetay.title}</h4>\n                    <p>\n                      <strong>IMDB</strong>:\n                      <span>{peopledetay.vote_average} </span>\n                    </p>\n                    <p>\n                      {\" \"}\n                      <strong>Yapım</strong>:\n                      <span>{peopledetay.release_date} </span>\n                    </p>\n                    <p>\n                      {\" \"}\n                      <strong>Film Özeti</strong>:\n                      <span>{peopledetay.overview}</span>\n                    </p>\n                    <br />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  getPeopleRequest: () => dispatch(getPeopleRequest()),\n});\n\nconst mapStateToProps = (state) => ({\n  people: state.people,\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(PeopleDetay));\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PublicLayout from \"./PublicLayout/PublicLayout\";\nimport Content from \"./Content/Content\";\nimport Films from \"./NavbarComponents/Films\";\nimport FilmsDetay from \"./NavbarComponents/FilmsDetay\";\nimport People from \"./NavbarComponents/People\";\nimport PeopleDetay from \"./NavbarComponents/PeopleDetay\";\nimport \"./format.css\";\n\nconst PublicRoute = ({ children, ...rest }) => {\n  return (\n    <Route {...rest} render={() => <PublicLayout>{children}</PublicLayout>} />\n  );\n};\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <PublicRoute path=\"/film-project\" exact>\n            <Content />\n          </PublicRoute>\n          <PublicRoute path=\"/film-project/people\" exact>\n            <People />\n          </PublicRoute>\n          <PublicRoute path=\"/film-project/people/:id\" exact>\n            <PeopleDetay />\n          </PublicRoute>\n          <PublicRoute path=\"/film-project/films\" exact>\n            <Films />\n          </PublicRoute>\n          <PublicRoute path=\"/film-project/films/:id\" exact>\n            <FilmsDetay />\n          </PublicRoute>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SEARCH_FILM_FAILURE, SEARCH_FILM_REQUEST, SEARCH_FILM_SUCCESS,GET_FILMS_FAILURE, GET_FILMS_REQUEST, GET_FILMS_SUCCESS, RATE_FILM_FAILURE, RATE_FILM_REQUEST, RATE_FILM_SUCCESS } from \"./actions\";\n\nconst initialState = {\n  data: null,\n  error: null,\n  rateData: null\n};\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case GET_FILMS_REQUEST:\n      return { ...state, error: '' };\n    case GET_FILMS_SUCCESS:\n      return { ...state, data: payload };\n    case GET_FILMS_FAILURE:\n      return { ...state, error: payload };\n    case RATE_FILM_REQUEST:\n      return { ...state, error: '', rateData: '' };\n    case RATE_FILM_SUCCESS:\n      return { ...state, rateData: payload };\n    case RATE_FILM_FAILURE:\n      return { ...state, rateData: payload };\n    case SEARCH_FILM_REQUEST:\n      return { ...state, error: '' };\n    case SEARCH_FILM_SUCCESS:\n      return { ...state, data: payload };\n    case SEARCH_FILM_FAILURE:\n      return { ...state, error: payload };\n    default:\n      return state;\n  }\n}","import { GET_PEOPLE_FAILURE, GET_PEOPLE_REQUEST, GET_PEOPLE_SUCCESS } from \"./actions\";\n\nconst initialState = {\n  data: null,\n  error: null,\n};\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case GET_PEOPLE_REQUEST:\n      return { ...state, error: '' };\n    case GET_PEOPLE_SUCCESS:\n      return { ...state, data: payload };\n    case GET_PEOPLE_FAILURE:\n      return { ...state, error: payload };\n    default:\n      return state;\n  }\n}","import { GET_GENRES_FAILURE, GET_GENRES_REQUEST, GET_GENRES_SUCCESS } from \"./actions\";\n\nconst initialState = {\n  data: null,\n  error: null,\n};\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case GET_GENRES_REQUEST:\n      return { ...state, error: '' };\n    case GET_GENRES_SUCCESS:\n      return { ...state, data: payload };\n    case GET_GENRES_FAILURE:\n      return { ...state, error: payload };\n    default:\n      return state;\n  }\n}","import { getSearchParams } from '../helpers';\n\nexport const API_URL = 'https://api.themoviedb.org/3';\n\nconst contentTypes = {\n  json: 'application/json; charset=utf-8',\n  urlEncoded: 'application/x-www-form-urlencoded;charset=UTF-8',\n  isMultiPart: 'application/json; charset=utf-8',\n};\n\nconst Post = (endpoint, body = {}, token, isUrlEncoded) => {\n  const apiUrl = `${API_URL}${endpoint}`;\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\n      // token,\n    },\n    body: JSON.stringify(body),\n  };\n  const response = fetch(apiUrl, requestOptions)\n    .then(fetchResponse => fetchResponse.json())\n    .catch(error => error);\n  return response;\n};\n\nconst PostFormData = (endpoint, body = {}, token) => {\n  const apiUrl = `${API_URL}${endpoint}`;\n  const bodyAsFormData = new FormData();\n  Object.keys(body).forEach(key => bodyAsFormData.append(key, body[key]));\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      // token,\n    },\n    body: bodyAsFormData,\n  };\n  const response = fetch(apiUrl, requestOptions)\n    .then(fetchResponse => fetchResponse.json())\n    .catch(error => error);\n  return response;\n};\n\nconst PutFormData = (endpoint, body = {}, token) => {\n  const apiUrl = `${API_URL}${endpoint}`;\n  const bodyAsFormData = new FormData();\n  Object.keys(body).forEach(key => bodyAsFormData.append(key, body[key]));\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      // token,\n    },\n    body: bodyAsFormData,\n\n  };\n  const response = fetch(apiUrl, requestOptions)\n    .then(fetchResponse => fetchResponse.json())\n    .catch(error => error);\n  return response;\n};\n\n\nconst Delete = (endpoint, body = {}, token, isUrlEncoded) => {\n  const apiUrl = `${API_URL}${endpoint}`;\n  const requestOptions = {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\n      token,\n    },\n    body: isUrlEncoded ? getSearchParams(body) : JSON.stringify(body),\n  };\n  const response = fetch(apiUrl, requestOptions)\n    .then(response => response.json())\n    .catch(error => error);\n  return response;\n};\n\nconst Put = (endpoint, body = {}, token, isUrlEncoded) => {\n  const apiUrl = `${API_URL}${endpoint}`;\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\n      token,\n      \"X-API-KEY\": \"5f6dfd4cbbe3778697b2287c28081cc5\",\n      \"Authorization\": token,\n    },\n    body: isUrlEncoded ? getSearchParams(body) : JSON.stringify(body),\n\n  };\n  const response = fetch(apiUrl, requestOptions)\n    .then(response => response.json())\n    .catch(error => error);\n  return response;\n};\n\nconst Get = (endpoint, body = {}, token, isUrlEncoded) => {\n  const apiUrl = isUrlEncoded\n    ? `${API_URL}${endpoint}${getSearchParams(body)}`\n    : `${API_URL}${endpoint}`;\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\n       // token, \n    },\n    data: isUrlEncoded ? getSearchParams(body) : JSON.stringify(body),\n  };\n  const response = fetch(apiUrl, requestOptions)\n    .then(response => response.json())\n    .catch(error => error);\n  return response;\n};\n\nexport {\n  Post, Get, Put, Delete,\n  PostFormData,\n  PutFormData\n};","import { Get, Post } from \"../services\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { GET_FILMS_FAILURE, GET_FILMS_REQUEST, GET_FILMS_SUCCESS, RATE_FILM_FAILURE, RATE_FILM_REQUEST, RATE_FILM_SUCCESS, SEARCH_FILM_FAILURE, SEARCH_FILM_REQUEST, SEARCH_FILM_SUCCESS } from \"./actions\";\n\nfunction* getFilmsSaga() {\n  const key = '5f6dfd4cbbe3778697b2287c28081cc5'\n  try {\n    const response = yield call(Get, `/movie/popular?api_key=${key}`, {},false);\n    if (response) {\n      yield put({ type: GET_FILMS_SUCCESS, payload: response.results });\n    } else {\n      yield put({ type: GET_FILMS_FAILURE, payload: response });\n    }\n  } catch (error) {\n    yield put({ type: GET_FILMS_FAILURE, payload: error });\n  }\n}\n\nfunction* searchFilmSaga( payload ) {\n  debugger\n  const key = '5f6dfd4cbbe3778697b2287c28081cc5'\n  try {\n    const response = yield call(Get, `/search/movie?api_key=${key}&language=en-US&query=${payload}&page=1&include_adult=false`, {},false);\n    if (response) {\n      yield put({ type: SEARCH_FILM_SUCCESS, payload: response.results });\n    } else {\n      yield put({ type: SEARCH_FILM_FAILURE, payload: response });\n    }\n  } catch (error) {\n    yield put({ type: SEARCH_FILM_FAILURE, payload: error });\n  }\n}\n\nfunction* rateFilmSaga({ payload }) {\n  const key = '5f6dfd4cbbe3778697b2287c28081cc5'\n  const session_id = '9d4e2b1757ed3f577ad6f625c888fc2195160d50'\n  try {\n    const response = yield call(Post, `/movie/${payload.movie_id}/rating?api_key=${key}&session_id=${session_id}`, payload,{},false);\n    if (response) {\n      yield put({ type: RATE_FILM_SUCCESS, payload: response });\n    } else {\n      yield put({ type: RATE_FILM_FAILURE, payload: response });\n    }\n  } catch (error) {\n    yield put({ type: RATE_FILM_FAILURE, payload: error });\n  }\n}\n\n\nexport default function* Saga() {\n  yield takeLatest(GET_FILMS_REQUEST, getFilmsSaga);\n  yield takeLatest(RATE_FILM_REQUEST, rateFilmSaga);\n  yield takeLatest(SEARCH_FILM_REQUEST, searchFilmSaga);\n\n  \n}\n","import { Get, Post } from \"../services\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { GET_PEOPLE_FAILURE, GET_PEOPLE_REQUEST, GET_PEOPLE_SUCCESS } from \"./actions\";\n\nfunction* getPeopleSaga({ payload }) {\n  const key = '5f6dfd4cbbe3778697b2287c28081cc5'\n  try {\n    const response = yield call(Get, `/person/popular?api_key=${key}`, {},false);\n    if (response) {\n      yield put({ type: GET_PEOPLE_SUCCESS, payload: response.results });\n    } else {\n      yield put({ type: GET_PEOPLE_FAILURE, payload: response });\n    }\n  } catch (error) {\n    yield put({ type: GET_PEOPLE_FAILURE, payload: error });\n  }\n}\n\n\nexport default function* Saga() {\n  yield takeLatest(GET_PEOPLE_REQUEST, getPeopleSaga);\n}\n","import { Get, Post } from \"../services\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { GET_GENRES_FAILURE, GET_GENRES_REQUEST, GET_GENRES_SUCCESS } from \"./actions\";\n\nfunction* getGenresSaga({ payload }) {\n  const key = '5f6dfd4cbbe3778697b2287c28081cc5'\n  try {\n    const response = yield call(Get, `/genre/movie/list?api_key=${key}`, {},false);\n    if (response) {\n      yield put({ type: GET_GENRES_SUCCESS, payload: response.genres });\n    } else {\n      yield put({ type: GET_GENRES_FAILURE, payload: response });\n    }\n  } catch (error) {\n    yield put({ type: GET_GENRES_FAILURE, payload: error });\n  }\n}\n\n\nexport default function* Saga() {\n  yield takeLatest(GET_GENRES_REQUEST, getGenresSaga);\n}\n","import { all } from 'redux-saga/effects'\nimport films from \"./films/saga\"\nimport people from \"./people/saga\"\nimport genres from \"./genres/saga\"\n\nexport default function* rootSaga() {\n    yield all([films(),people(),genres()])\n}","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport films from \"./films/reducers\";\nimport people from \"./people/reducers\"\nimport genres from \"./genres/reducers\"\n\nexport default (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    films,people,genres,\n  });\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nexport default history;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from \"redux-thunk\";\nimport reducers from \"./redux/reducers\";\nimport sagas from \"./redux/sagas\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { Provider } from 'react-redux';\nimport history from \"./history\";\n\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst routeMiddleware = routerMiddleware(history);\n\nconst middlewares = [thunk, sagaMiddleware, routeMiddleware];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  reducers(history),\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\n\nsagaMiddleware.run(sagas);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}